// Generated by view binder compiler. Do not edit!
package kkn.vishu.mathana.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kkn.vishu.mathana.R;

public final class FragmentBookBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final AppCompatTextView tvDescription;

  @NonNull
  public final AppCompatImageView tvImage;

  private FragmentBookBinding(@NonNull NestedScrollView rootView,
      @NonNull RecyclerView recyclerView, @NonNull AppCompatTextView tvDescription,
      @NonNull AppCompatImageView tvImage) {
    this.rootView = rootView;
    this.recyclerView = recyclerView;
    this.tvDescription = tvDescription;
    this.tvImage = tvImage;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBookBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBookBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_book, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBookBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      AppCompatTextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvImage;
      AppCompatImageView tvImage = ViewBindings.findChildViewById(rootView, id);
      if (tvImage == null) {
        break missingId;
      }

      return new FragmentBookBinding((NestedScrollView) rootView, recyclerView, tvDescription,
          tvImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
